package com.example.tuan03_bai01.data.repository

import com.example.tuan03_bai01.data.model.UIComponent

object UIComponentRepository {
    val groupedComponents = listOf(
        "Display" to listOf(
            UIComponent("Text", "Displays text with various styling options."), // C·∫≠p nh·∫≠t m√¥ t·∫£ cho r√µ h∆°n
            UIComponent("Image", "Displays bitmap and vector graphics.") // C·∫≠p nh·∫≠t m√¥ t·∫£
        ),
        "Input" to listOf(
            UIComponent("TextField", "Allows users to enter and modify text."), // C·∫≠p nh·∫≠t m√¥ t·∫£
            UIComponent("PasswordField", "A TextField specialized for password input.") // C·∫≠p nh·∫≠t m√¥ t·∫£
        ),
        "Layout" to listOf(
            UIComponent("Column", "Arranges child composables vertically."), // C·∫≠p nh·∫≠t m√¥ t·∫£
            UIComponent("Row", "Arranges child composables horizontally.") // C·∫≠p nh·∫≠t m√¥ t·∫£
        )
    )

    // üî• H√†m m·ªõi: T√¨m UIComponent d·ª±a v√†o t√™n
    fun findComponentByName(name: String): UIComponent? {
        return groupedComponents.flatMap { it.second }.find { it.name == name }
    }

    // üî• H√†m m·ªõi: T√¨m m√¥ t·∫£ d·ª±a v√†o t√™n (ti·ªán l·ª£i h∆°n)
    fun findDescriptionByName(name: String): String {
        return findComponentByName(name)?.description ?: "No description available."
    }
}